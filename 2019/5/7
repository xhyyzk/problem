 hdu 2049
 n对新人中有m个新郎选错新娘有多少种方式
 错排公式 f(n) = (n - 1)*(f（n-1）+f(n-2));
 所以公式就是C(n)(m)*f(m);
 
代码：
#include<bits/stdc++.h>
using namespace std;
const int MAXN = 1e5 + 10;
const int mod = 1e9 + 7;
typedef long long ll;
double r, x1, x2, y2;
int n, m, t;
ll c[35][35];
void init1() {
    c[0][0] = 1;
  for(int i = 1 ; i <= 30 ; i++) {
    for(int j = 0 ; j <= i ; j++) {
      if(j == 0 || i == j) c[i][j] = 1;
      else c[i][j] = c[i - 1][j - 1] + c[i - 1][j];
    }
  }
}

ll f[30];
void init2() {
    f[1] = 0;
    f[2] = 1;
    for(int i = 3; i <= 20; ++i) f[i] = (i - 1) * (f[i - 1] + f[i - 2]);
}

int main() {
    cin >> t;
    init1();
    init2();
    while(t--) {
        cin >> n >> m;
        cout << c[n][m] * f[m] << endl;
    }
    return 0;
}


hdu 2068
有一半及以下错排有多少种

代码：
#include<bits/stdc++.h>
using namespace std;
const int MAXN = 1e5 + 10;
const int mod = 1e9 + 7;
typedef long long ll;
double r, x1, x2, y2;
int n, m, t;
ll c[35][35];
void init1() {
    c[0][0] = 1;
  for(int i = 1 ; i <= 30 ; i++) {
    for(int j = 0 ; j <= i ; j++) {
      if(j == 0 || i == j) c[i][j] = 1;
      else c[i][j] = c[i - 1][j - 1] + c[i - 1][j];
    }
  }
}

ll f[30];
void init2() {
    f[0] = 1;
    f[1] = 0;
    f[2] = 1;
    for(int i = 3; i <= 20; ++i) f[i] = (i - 1) * (f[i - 1] + f[i - 2]);
}

int main() {
    init1();
    init2();
    while(cin >> n && n) {
        ll res = 0;
        for(int i = 0; i <= n / 2; ++i) {
            res += c[n][i]*f[i];
        }
        cout << res << endl;
    }
    return 0;
}


hdu 1465
裸的错排计数

代码：
#include<bits/stdc++.h>
using namespace std;
const int MAXN = 1e5 + 10;
const int mod = 1e9 + 7;
typedef long long ll;
double r, x1, x2, y2;
int n, m, t;
ll c[35][35];
void init1() {
    c[0][0] = 1;
  for(int i = 1 ; i <= 30 ; i++) {
    for(int j = 0 ; j <= i ; j++) {
      if(j == 0 || i == j) c[i][j] = 1;
      else c[i][j] = c[i - 1][j - 1] + c[i - 1][j];
    }
  }
}

ll f[30];
void init2() {
    f[0] = 1;
    f[1] = 0;
    f[2] = 1;
    for(int i = 3; i <= 20; ++i) f[i] = (i - 1) * (f[i - 1] + f[i - 2]);
}

int main() {
    init2();
    while(cin >> n) {
        cout << f[n] << endl;
    }
    return 0;
}

