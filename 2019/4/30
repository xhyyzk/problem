hdu 1847
n个石子，每次只能取2的次幂个石子
sg函数打表规律题

代码
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int MAXN = 1100;
const int mod = 1e9 + 7;
int vis[1100];
int sg[1100];

/*00void init() {
    memset(sg , -1 , sizeof(sg));
    sg[0] = 0;
    for(int i = 1 ; i <= MAXN ; i++) {
        memset(vis , 0 , sizeof(vis));
        for(int j = 1 ; j * 2 <= i ; j = j * 2) {
            vis[sg[i - j]] = 1;
        }
        for(int j = 0 ;; j++) {
            if(!vis[j]) {
                sg[i] = j;
                break;
            }
        }
    }
}*/

int main() {
    int n;
    while(cin >> n && n) {
        if(n % 3 == 0) cout << "Cici" << endl;
        else cout << "Kiki" << endl;
    }
    return 0;
}

hdu 2516
n个石子，每次只能取斐波那契数个石子
斐波那契博弈，当n为斐波那契数时，先手必败，反之后手必败

代码
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int MAXN = 1e9 + 10;
const int mod = 1e9 + 7;
int f[60];
int n;

void init() {
    f[1] = f[2] = 1;
    for(int i = 3 ; i <= 55 ; i++) {
        f[i] = f[i - 1] + f[i - 2];
    }
}

int main() {
    init();
    while(scanf("%d" , &n)) {
        if(n == 0) return 0;
        else {
            int vis = 0;
            for(int i = 3 ; i <= 55 ; i++) {
                if(n == f[i]) {
                    vis = 1;
                    break;
                }
            }
            if(vis) printf("Second win\n");
            else printf("First win\n");
        }
    }
    return 0;
}
